env:
    browser: true
    es6: true
parser: '@typescript-eslint/parser'
extends:
    - 'eslint:recommended'
    - 'plugin:@typescript-eslint/eslint-recommended'
    - 'plugin:@typescript-eslint/recommended'
    - 'prettier'
plugins:
    - jest
    - '@typescript-eslint'
    - import
    - simple-import-sort
rules:
    # The following two rules are needed due to a bug in babel-eslint
    # https://github.com/babel/babel-eslint/issues/815
    simple-import-sort/imports: [error, {
        groups: [
            # Side effect imports.
            ["^\\u0000"],
            # Packages. `react` related packages come first.
            ["^react", "^@?\\w"],
            ["^"],
            # Relative imports.
            # Anything that starts with a dot.
            ["^\\."],
        ]
    }]
    simple-import-sort/exports: error
    import/first: error
    import/newline-after-import: error
    import/no-duplicates: error
    indent: off
    template-curly-spacing: off
    rest-spread-spacing: [error, never]
    array-bracket-spacing: [error, never]
    eol-last: [error, always]
    object-curly-spacing: [error, never]
    padded-blocks: [error, never]
    arrow-spacing: error
    arrow-parens: [error, as-needed]
    prefer-spread: error
    prefer-template: error
    prefer-arrow-callback: error
    no-else-return: error
    space-infix-ops: error
    space-unary-ops: error
    quote-props: [error, as-needed]
    space-in-parens: [error, never]
    space-before-blocks: error
    key-spacing: error
    no-multiple-empty-lines: error
    block-spacing: error
    no-trailing-spaces: error
    no-unneeded-ternary: error
    no-whitespace-before-property: error
    no-multi-spaces: error
    guard-for-in: error
    curly: error
    no-var: error
    linebreak-style: [error, unix]
    no-restricted-syntax: [error, 'SequenceExpression']
    no-console: [warn, allow: [warn, error]]
    '@typescript-eslint/no-unused-vars': [warn, {argsIgnorePattern: '^_', varsIgnorePattern: '^_'}]
    '@typescript-eslint/quotes': [error, single, {'avoidEscape': true}]
    '@typescript-eslint/semi': [error, always]
    '@typescript-eslint/brace-style': error
    '@typescript-eslint/comma-spacing': error
    '@typescript-eslint/func-call-spacing': [error, never]
    '@typescript-eslint/space-before-function-paren':
        [error, {'anonymous': 'always', 'named': 'never', 'asyncArrow': 'always'}]
    '@typescript-eslint/no-explicit-any': 0
    '@typescript-eslint/no-non-null-assertion': 0
    '@typescript-eslint/ban-ts-comment': 0
    '@typescript-eslint/no-empty-interface': 0
    '@typescript-eslint/ban-types':
        - error
        - "types":
            "[]": "Found empty array-typed value. Did you mean e.g. `Foo[]`?"
            "{}": false
    '@typescript-eslint/no-empty-function': 0
    '@typescript-eslint/no-use-before-define':
        - error
        - functions: false
          enums: false
          classes: false
          variables: true
